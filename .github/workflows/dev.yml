---
name: Infra - dev

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main

jobs:

  tfbackend:
    name: TF Backend - dev
    uses: ./.github/workflows/tfbackend.yml
    with:
      bucket: ${{ vars.BACKEND_BUCKET }}
      table: ${{ vars.BACKEND_TABLE }}
      key: ${{ vars.BACKEND_KEY_DEV }}
      region: ${{ vars.AWS_REGION }}
      filename: dev.s3.tfbackend

  tfvars:
    name: TF Variables - dev
    uses: ./.github/workflows/tfvars.yml
    with:
      bot-token-param: ${{ vars.BOT_TOKEN_PARAM_DEV }}
      secret-token-param: ${{ vars.SECRET_TOKEN_PARAM_DEV }}
      lambda-image-param: ${{ vars.BOT_WEBHOOK_IMAGE_PARAM_DEV }}

  tf-plan:
    name: TF Plan - dev
    needs: [ tfbackend, tfvars ]
    uses: ./.github/workflows/tf-plan.yml
    with:
      working-directory:  ${{ vars.WORKDIR_DEV }}
      role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      aws-region: ${{ vars.AWS_REGION }}
      tfbackend: ${{ needs.tfbackend.outputs.filename }}
      tfvars: ${{ needs.tfvars.outputs.filename }}
      filename: dev.tfplan

  tf-apply:
    name: TF Apply - dev
    environment: dev
    needs: [ tfbackend, tfvars, tf-plan ]
    uses: ./.github/workflows/tf-apply.yml
    with:
      working-directory: ${{ vars.WORKDIR_DEV }}
      role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      aws-region: ${{ vars.AWS_REGION }}
      tfbackend: ${{ needs.tfbackend.outputs.filename }}
      tfvars: ${{ needs.tfvars.outputs.filename }}
      tfplan: dev.tfplan

    # steps:

    #   - name: Checkout
    #     uses: actions/checkout@v3

    #   - name: TF Bootstrap
    #     uses: ./.github/actions/tf-bootstrap
    #     with:
    #       working-directory:  ${{ vars.WORKDIR_DEV }}
    #       role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
    #       aws-region: ${{ vars.AWS_REGION }}
    #       tfbackend: ${{ needs.tfbackend.outputs.filename }}
    #       tfvars: ${{ needs.tfvars.outputs.filename }}

    #   - name: Download Plan
    #     uses: actions/download-artifact@v3
    #     with:
    #       name: ${{ needs.tf-plan.outputs.filename }}
    #       path: ${{ vars.WORKDIR_DEV }}

    #   - name: TF Apply
    #     working-directory: ${{ vars.WORKDIR_DEV }}
    #     run: |
    #       terraform apply -auto-approve ${{ needs.tf-plan.outputs.filename }}
