---
name: Infra - dev
run-name: dev

permissions:
  contents: read
  actions: read
  id-token: write
  pull-requests: write
  security-events: write

on:

  workflow_dispatch:

  push:
    branches:
      - main
    paths:
      - envs/dev/**
      - modules/**

  pull_request:
    branches:
      - main
    paths:
      - envs/imateapot/**
      - modules/**

  repository_dispatch:
    types: [ dev ]

jobs:

  tfbackend:
    name: TF Backend - dev
    uses: ./.github/workflows/tfbackend.yml
    with:
      bucket: ${{ vars.BACKEND_BUCKET }}
      table: ${{ vars.BACKEND_TABLE }}
      key: ${{ vars.BACKEND_KEY_DEV }}
      region: ${{ vars.AWS_REGION }}
      filename: dev.s3.tfbackend

  tfvars:
    name: TF Variables - dev
    uses: ./.github/workflows/tfvars.yml
    with:
      bot-token-param: ${{ vars.BOT_TOKEN_PARAM_DEV }}
      secret-token-param: ${{ vars.SECRET_TOKEN_PARAM_DEV }}
      openai-token-param: ${{ vars.OPENAI_TOKEN_PARAM }}
      lambda-image-param: ${{ vars.BOT_WEBHOOK_IMAGE_PARAM_DEV }}

  tf-plan:
    name: TF Plan - dev
    needs: [ tfbackend, tfvars ]
    uses: ./.github/workflows/tf-plan.yml
    with:
      environment: dev
      working-directory: ${{ vars.WORKDIR_DEV }}
      role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      aws-region: ${{ vars.AWS_REGION }}
      tfbackend: ${{ needs.tfbackend.outputs.filename }}
      tfvars: ${{ needs.tfvars.outputs.filename }}
      filename: dev.tfplan
      checkov_skip: ${{ vars.CHECKOV_SKIP }}

  tf-apply:
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'repository_dispatch')
    name: TF Apply - dev
    needs: [ tfbackend, tfvars, tf-plan ]
    uses: ./.github/workflows/tf-apply.yml
    with:
      environment: dev
      working-directory: ${{ vars.WORKDIR_DEV }}
      role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      aws-region: ${{ vars.AWS_REGION }}
      tfbackend: ${{ needs.tfbackend.outputs.filename }}
      tfvars: ${{ needs.tfvars.outputs.filename }}
      tfplan: ${{ needs.tf-plan.outputs.filename }}
