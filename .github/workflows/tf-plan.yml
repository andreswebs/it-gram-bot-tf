---
on:
  workflow_call:

    inputs:
      environment:
        required: false
        type: string
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      working-directory:
        required: true
        type: string
      role-to-assume:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      tfbackend:
        required: false
        type: string
        default: this.s3.tfbackend
      tfvars:
        required: false
        type: string
        default: terraform.tfvars
      filename:
        required: false
        type: string
        default: this.tfplan

    outputs:
      filename:
        description: The filename used to save the tfplan
        value: ${{ jobs.tf-plan.outputs.filename }}

jobs:

  tf-plan:

    runs-on: ${{ inputs.runs-on }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}

    outputs:
      filename: ${{ steps.tf-plan.outputs.filename }}

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: TF Bootstrap
        id: init
        uses: ./.github/actions/tf-bootstrap
        with:
          working-directory: ${{ inputs.working-directory }}
          role-to-assume: ${{ inputs.role-to-assume }}
          aws-region: ${{ inputs.aws-region }}
          tfbackend: ${{ inputs.tfbackend }}
          tfvars: ${{ inputs.tfvars }}

      - name: TF Format Check
        id: fmt
        run: |
          terraform fmt -check

      - name: TF Validation
        id: validate
        run: |
          terraform validate

      - name: TF Plan - ${{ inputs.filename }}
        id: tf-plan
        run: |
          terraform plan -input=false -no-color -out=${{ inputs.filename }}
          echo "filename=${{ inputs.filename }}" >> $GITHUB_OUTPUT

      - name: Save ${{ steps.tf-plan.outputs.filename }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.tf-plan.outputs.filename }}
          path: ${{ inputs.working-directory }}/${{ steps.tf-plan.outputs.filename }}
          if-no-files-found: error

      - name: TF Show - ${{ steps.tf-plan.outputs.filename }}
        id: tf-show
        run: |
          terraform show -json ${{ steps.tf-plan.outputs.filename }}

      - name: Generate ${{ steps.tf-plan.outputs.filename }}.json
        id: tf-json
        env:
          JSON_CONTENTS: ${{ steps.tf-show.outputs.stdout }}
          JSON_FILE: ${{ steps.tf-plan.outputs.filename }}.json
        run: |
          echo "${JSON_CONTENTS}" | jq '.' > "${JSON_FILE}"
          echo "filename=${JSON_FILE}" >> $GITHUB_OUTPUT

      - name: Save ${{ steps.tf-json.outputs.filename }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.tf-json.outputs.filename }}
          path: ${{ inputs.working-directory }}/${{ steps.tf-json.outputs.filename }}
          if-no-files-found: error

      - name: Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          soft_fail: true
          file: ${{ inputs.working-directory }}/${{ steps.tf-json.outputs.filename }}
          skip_check: CKV_AWS_116,CKV_AWS_117,CKV_AWS_173,CKV_AWS_272,CKV_AWS_158,CKV_AWS_338
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

      - name: Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          PLAN: ${{ steps.tf-plan.outputs.stdout }}
          ENV_COMMENT: '- ${{ inputs.environment }}'
        with:
          script: |

            let output = ''
            output += `# Terraform Summary ${process.env.ENV_COMMENT}\n\n`
            output += '#### Format and Style `${{ steps.fmt.outcome }}`\n'
            output += '#### Initialization `${{ steps.init.outcome }}`\n'
            output += '#### Validation `${{ steps.validate.outcome }}`\n'
            output += '#### Plan `${{ steps.tf-plan.outcome }}`\n'
            output += '<details><summary>Show Plan</summary>\n\n'
            output += '```\n'
            output += process.env.PLAN
            output += '```\n\n'
            output += '</details>\n\n'
            output += '*Triggered by @${{ github.actor }}, Event `${{ github.event_name }}`*\n'

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
